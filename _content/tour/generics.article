Обобщения
Go поддерживает обобщенное программирование с использованием параметров типа. Этот урок показывает несколько примеров использования обобщений в вашем коде.

Авторы Go
https://golang.org

* Параметры типа

Функции Go могут быть написаны для работы с несколькими типами с использованием параметров типа.
Параметры типа функции указываются в квадратных скобках, перед аргументами функции.

  func Index[T comparable](s []T, x T) int

Это объявление означает, что `s` является срезом любого типа `T`, который удовлетворяет
встроенному ограничению `comparable`. `x` также является значением того же типа.

`comparable` это полезное ограничение, которое позволяет использовать операторы `==` и
`!=` для значений этого типа. В данном примере мы используем его для сравнения
значения со всеми элементами среза до тех пор, пока не найдется совпадение. Эта функция `Index` работает
для любого типа, который поддерживает сравнение.

.play generics/index.go

* Обобщенные типы

В дополнение к обобщенным функциям, Go также поддерживает обобщенные типы. Тип может
быть параметризован с помощью параметра типа, что может быть полезно для реализации
обобщенных структур данных.

Этот пример демонстрирует простое объявление типа для односвязного списка,
содержащего значения любого типа.

В качестве упражнения добавьте некоторую функциональность к этой реализации списка.

.play generics/list.go

* Поздравляем!

Вы закончили этот урок!

Вы можете вернуться к списку [[/tour/list][модулей]], чтобы найти, что изучить дальше, или перейдите к [[javascript:click('.next-page')][следующему уроку]].
